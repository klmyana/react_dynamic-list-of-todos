{"version":3,"sources":["types/Enum.ts","api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SelectType","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todoList","setSelectedTodo","selectedTodo","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","setFilter","filter","setSelectedType","onChange","event","target","value","placeholder","style","pointerEvents","Loader","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","App","setTodoList","loading","setLoading","error","setError","selectedType","getVisibleTodos","todos","normalizeFilter","trim","toLowerCase","visibleTodos","includes","Active","Completed","catch","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92709915.chunk.js","sourcesContent":["export enum SelectType {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todoList: Todo[];\n  setSelectedTodo: (todo: Todo) => void;\n  selectedTodo: null | Todo;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todoList,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n      <tbody>\n        {todoList.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            className={cn({\n              'has-background-info-light': selectedTodo?.id === todo.id,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={cn('far', {\n                    'fa-eye-slash': selectedTodo?.id === todo.id,\n                    'fa-eye': selectedTodo?.id !== todo.id,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","type Props = {\n  setFilter: (value: string) => void;\n  filter: string;\n  setSelectedType: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilter,\n  filter,\n  setSelectedType,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => setSelectedType(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={filter}\n        onChange={(event) => {\n          setFilter(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {filter && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setFilter('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  setSelectedTodo: (value: null) => void;\n  selectedTodo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId).then(setUser);\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={cn({\n                'has-text-success': selectedTodo.completed,\n                'has-text-danger': !selectedTodo.completed,\n              })}\n              >\n                {selectedTodo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>{user.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Todo } from './types/Todo';\nimport { SelectType } from './types/Enum';\nimport { getTodos } from './api';\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todoList, setTodoList] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [filter, setFilter] = useState('');\n  const [selectedType, setSelectedType] = useState('All');\n\n  function getVisibleTodos(todos: Todo[]): void {\n    const normalizeFilter = filter.trim().toLowerCase();\n    let visibleTodos = [...todos];\n\n    if (normalizeFilter) {\n      visibleTodos = visibleTodos.filter((todo) => todo.title.toLowerCase().includes(normalizeFilter));\n    }\n\n    switch (selectedType) {\n      case SelectType.Active:\n        visibleTodos = visibleTodos.filter((todo) => !todo.completed);\n        break;\n      case SelectType.Completed:\n        visibleTodos = visibleTodos.filter((todo) => todo.completed);\n        break;\n\n      default:\n        break;\n    }\n\n    setTodoList(visibleTodos);\n  }\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(getVisibleTodos)\n      .catch(() => setError('Try again later'))\n      .finally(() => setLoading(false));\n  }, [filter, selectedType]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n                filter={filter}\n                setSelectedType={setSelectedType}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              {!loading && todoList && !error && (\n                <TodoList\n                  todoList={todoList}\n                  setSelectedTodo={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal setSelectedTodo={setSelectedTodo} selectedTodo={selectedTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}